<Window x:Class="WpfApp1.Launcher"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="Launcher" Height="700" Width="1100" WindowStartupLocation="CenterScreen" MaxHeight="700" MaxWidth="1100" ResizeMode="NoResize"
        Background="#2A1B3D" WindowStyle="None">
    <Window.Resources>
        <ControlTemplate x:Key="TopMenuButton" TargetType="Button">
            <Grid Name="Btn" Height="50" Margin="20,0,0,0">

                <Border>
                    <Grid>
                        <Label Content="{TemplateBinding Content}"
                               Background="Transparent"
                               FontSize="23"
                               VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="#E3E2DF"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}" Value="true">
                                            <Setter Property="Foreground" Value="White"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path=IsPressed
                                            }" Value="true">
                                            <Setter Property="Foreground" Value="#E3E2DF"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path=IsFocused
                                            }" Value="true">
                                            <Setter Property="Foreground" Value="White"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                        <Label Content="{TemplateBinding Content}" Background="Transparent" Margin="-3,0,0,0" VerticalAlignment="Center" FontSize="23" FontWeight="Bold">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="White"></Setter>
                                    <Setter Property="Visibility" Value="Hidden"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                        Mode=FindAncestor,
                                        AncestorType={x:Type Button}},
                                        Path=IsFocused
                                        }" Value="true">
                                            <DataTrigger.Setters>
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <BlurEffect Radius="25"></BlurEffect>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Visibility" Value="Visible"></Setter>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Grid>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                    Mode=FindAncestor,
                                    AncestorType={x:Type Button}},
                                    Path=IsPressed
                                    }" Value="true">
                                    <Setter Property="Margin" Value="0,2,0,0"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                </Border>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="LeftMenuBtn" TargetType="Button">
            <Grid x:Name="Btn" Height="50">
                <Border>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource ResourceKey=Img}" VerticalAlignment="Center" HorizontalAlignment="Left" Height="30" Width="30" Stretch="Fill" Margin="20,0,0,0">

                        </Image>
                        <Label Content="{TemplateBinding Content}"
                           Background="Transparent"
                           FontSize="15"
                           VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="#E3E2DF"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}" Value="true">
                                            <Setter Property="Foreground" Value="White"></Setter>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path=IsFocused
                                            }" Value="true">
                                            <Setter Property="Foreground" Value="White"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </StackPanel>
                </Border>
                <Border x:Name="MouseOverBorder" Background="#ADADAD">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Opacity" Value="0"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}" Value="true">
                                    <Setter Property="Opacity" Value="0.1"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border x:Name="IsSelectedBorder" Background="#ADADAD">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Opacity" Value="0"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                    Mode=FindAncestor,
                                    AncestorType={x:Type Button}},
                                    Path=IsFocused
                                    }" Value="true">
                                    <Setter Property="Opacity" Value="0.1"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border x:Name="IsSelectedBorder2" Background="Transparent">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Hidden"></Setter>
                            <Setter Property="BorderThickness" Value="3,0,0,0"></Setter>
                            <Setter Property="BorderBrush" Value="#E98074"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                    Mode=FindAncestor,
                                    AncestorType={x:Type Button}},
                                    Path=IsFocused
                                    }" Value="true">
                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </Grid>
        </ControlTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="cabinetButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="15" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#da3f88"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#da3f88"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#da3a98"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#da3a98"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid x:Name="MainGrid" Grid.Row="1" Grid.ColumnSpan="2">
            <Grid.Background>
                <ImageBrush x:Name="GridBackGround" Stretch="Fill"></ImageBrush>
            </Grid.Background>
        </Grid>
        
        <Grid x:Name="TopMenu" Grid.Row="0" Grid.ColumnSpan="2">
            <Border BorderThickness="2" BorderBrush="#44318D" Background="Transparent">
                <StackPanel Orientation="Horizontal">
                    <Button Template="{ StaticResource ResourceKey = TopMenuButton }" Content="PLAY"></Button>
                    <Button Template="{ StaticResource ResourceKey = TopMenuButton }" Content="COMMUNICATION"></Button>
                    <Button x:Name="ShopButton" Click="ShopButton_Click"  Template="{ StaticResource ResourceKey = TopMenuButton }" Content="SHOP"></Button>
                    <Button Template="{ StaticResource ResourceKey = TopMenuButton }" Content="NEWS"></Button>
                    <Button Style="{DynamicResource cabinetButton}" x:Name="CabinetBtn" Click="CabinetBtn_Click" Cursor="Hand" Width="300" Height="60" Background="#8265a8" Margin="290,0,0,0">
                        <StackPanel Orientation="Horizontal" Height="50">
                            <Image Source="\res\user.png" Width="40" Height="40" ></Image>
                            <TextBlock x:Name="UsernameInterface" Text="Jaba" Foreground="#E3E2DF" TextWrapping="Wrap" Background="Transparent" Height="36" Width="250" TextAlignment="Left" Margin="10,0,0,0"  FontSize="24" />
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Border>
        </Grid>
        <Grid x:Name="SlideMenu" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left">
            <Grid.Style>
                <Style TargetType="Grid" >
                    <Setter Property="Width" Value="225"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=OpenClosedLeftMenuBtn}" Value="true">
                            <Setter Property="Width" Value="56"></Setter>

                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Border BorderThickness="1,0,1,1" BorderBrush="#44318D"></Border>
            <Border BorderThickness="0" Background="Black" Opacity="0.4"></Border>
            <StackPanel Orientation="Vertical">
                <Button x:Name="BMinecraft" Click="BMinecraft_Click" Template="{StaticResource ResourceKey=LeftMenuBtn}" Content="Minecraft">

                    <Button.Resources>
                        <ImageSource x:Key="Img">C:\Users\user\source\repos\WpfApp1\WpfApp1\res\icons\minecraft.png</ImageSource>
                    </Button.Resources>
                </Button>
                <Button x:Name="BPubg" Click="BPubg_Click" Template="{StaticResource ResourceKey=LeftMenuBtn}" Content="PUBG">

                    <Button.Resources>
                        <ImageSource x:Key="Img">C:\Users\user\source\repos\WpfApp1\WpfApp1\res\icons\pubg.png</ImageSource>
                    </Button.Resources>
                </Button>
                <Button Click="DotaButton_Click" Template="{StaticResource ResourceKey=LeftMenuBtn}" Content="Dota 2">

                    <Button.Resources>
                        <ImageSource x:Key="Img">C:\Users\user\source\repos\WpfApp1\WpfApp1\res\icons\dota.png</ImageSource>
                    </Button.Resources>
                </Button>
                <Button x:Name="BGta" Click="BGta_Click" Template="{StaticResource ResourceKey=LeftMenuBtn}" Content="Grand Theft Auto 5">

                    <Button.Resources>
                        <ImageSource x:Key="Img">C:\Users\user\source\repos\WpfApp1\WpfApp1\res\icons\gta.png</ImageSource>
                    </Button.Resources>
                </Button>
                <Button x:Name="BDarkSouls" Click="BDarkSouls_Click" Template="{StaticResource ResourceKey=LeftMenuBtn}" Content="Dark Souls">

                    <Button.Resources>
                        <ImageSource x:Key="Img">C:\Users\user\source\repos\WpfApp1\WpfApp1\res\icons\DarkSouls.png</ImageSource>
                    </Button.Resources>
                </Button>
                <Button x:Name="BCs" Click="BCs_Click" Template="{StaticResource ResourceKey=LeftMenuBtn}" Content="Counter Strike">

                    <Button.Resources>
                        <ImageSource x:Key="Img">C:\Users\user\source\repos\WpfApp1\WpfApp1\res\icons\cs.png</ImageSource>
                    </Button.Resources>
                </Button>
                <Button x:Name="BEldenRing" Click="BEldenRing_Click" Template="{StaticResource ResourceKey=LeftMenuBtn}" Content="Elden Ring">

                    <Button.Resources>
                        <ImageSource x:Key="Img">C:\Users\user\source\repos\WpfApp1\WpfApp1\res\icons\eldenRing.png</ImageSource>
                    </Button.Resources>
                </Button>
                <Button x:Name="BDayz" Click="BDayz_Click" Template="{StaticResource ResourceKey=LeftMenuBtn}" Content="DAYZ">

                    <Button.Resources>
                        <ImageSource x:Key="Img">C:\Users\user\source\repos\WpfApp1\WpfApp1\res\icons\dayz.png</ImageSource>
                    </Button.Resources>
                </Button>

            </StackPanel>
            <ToggleButton Focusable="False" x:Name="OpenClosedLeftMenuBtn" Height="30" Width="30" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="20, 0, 0, 20" Background="White">
                <ToggleButton.Template>
                    <ControlTemplate>
                        <Image>
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="C:\Users\user\source\repos\WpfApp1\WpfApp1\res\icons\closePanel.png"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                                Mode=FindAncestor,
                                                AncestorType={x:Type ToggleButton}},
                                                Path=IsChecked
                                                }" Value="true">
                                            <Setter Property="Source" Value="C:\Users\user\source\repos\WpfApp1\WpfApp1\res\icons\open.png"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
        </Grid>
    </Grid>
</Window>
